<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>99999999</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>hand_text = "";

middle = room_height/2;
center = room_width/2;

//h = denorm_len_y(3);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
// Draw the divider and center marker
//middle = room_height/2
//center = room_width/2;
h = denorm_len_y(3)/2;
w = denorm_len_x(3)/2;
long = denorm_len_y(11);
short = denorm_len_y(10);

//debug("h: " + string(h) + "; w: " + string(w) + "; long: " + string(long) + "; short" + string(short));

draw_set_color(c_dkgray);
draw_rectangle(scr_denorm_x(0), middle - h, scr_denorm_x(view_wport[0]), middle + h, false);
draw_rectangle(center - w, middle - long , center + w, middle + long, false);

//draw_rectangle(scr_denorm_x(0), scr_denorm_y(middle - 1), scr_denorm_x(view_wport[0]), scr_denorm_y(middle + 1), false);
//draw_rectangle(scr_denorm_x(center - 1), scr_denorm_y(middle - 11), scr_denorm_x(center + 1), scr_denorm_y(middle + 11), false);

draw_set_color(c_gray)
draw_line(scr_denorm_x(0), middle, scr_denorm_x(view_wport[0]), middle);
draw_line(center, middle - short, center, middle + short);
//draw_rectangle(scr_denorm_x(0), scr_denorm_y(middle), scr_denorm_x(view_wport[0]), scr_denorm_y(middle), scr_denorm_x(false));
//draw_rectangle(scr_denorm_x(center), scr_denorm_y(middle - 10), scr_denorm_x(center), scr_denorm_y(middle + 10), false);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
