<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.view = id;

deck = x;
num = y;

per_row = 4;
num_rows = 3;

item_width = global.scale * ds_map_find_value(deck.list[| 0], "height");
item_height = global.scale * ds_map_find_value(deck.list[| 0], "width");

nav = 25;

margin = 10;
padding = 5;

width = (2*margin) + per_row*(item_width + padding) - padding;
height = (2*margin) + num_rows*(item_height + padding) - paddng;

x = deck.x - width/2;
y = deck.y - height/2;

x1 = x - nav;
y1 = y - nav;
x2 = x + width + nav;
y2 = y + height + nav;

per_page = per_row * num_rows;

curr_page = 0;

var card = noone;
for(i = curr_page * per_page; i &lt; (curr_page+1)*per_page; i++)
{
    card = scr_card_from_map(deck.list[| i]);
    ds_list_add(global.viewCards, card);
}

scr_update_depths();

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var size = ds_list_size(global.viewCards);
var availspace, cardspace, paddspace, card, row, column;

for(i = 0; i &lt; size; i++)
{
    card = global.viewCards[| i];
    
    row = i div per_row;
    column = i mod per_row;
    
    card.x = x + margin + item_width/2 + column*(item_width+padding);
    card.y = y + margin + item_height/2 + row*(item_height+padding);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_color(c_ltgray);
draw_rectangle(x, y, x+width, y+height, false);

draw_set_color(c_gray);
draw_rectangle(x1, y, x, y+height, false);
draw_rectangle(x+width, y, x2, y+height, false);

draw_set_color(c_silver);
draw_rectangle(x1, y1, x2, y, false);
draw_rectangle(x, y+height, x+width, y2, false);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
